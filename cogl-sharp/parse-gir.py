#!/usr/bin/env python
import sys
import xml.dom.minidom
from xml.dom.minidom import Node

types = (
    "BufferBit"
)

header="""/* This file is generated by parse-gir.py, do not hand edit */
using System;

namespace Cogl
{
"""
footer="""}
"""

def make_enum_name(gir_name):
    return gir_name.capitalize()

def generate_bitfields(doc):
    for node in doc.getElementsByTagName("bitfield"):
        type_name = node.getAttribute("name")
        if type_name not in types:
            continue

        print("Generate %s" % type_name + ".cs")

        fo = open(type_name + ".cs", "w+")
        fo.write(header)
        fo.write("    [Flags]\n")
        fo.write("    public enum %s\n" % type_name)
        fo.write("    {\n")
        members = node.getElementsByTagName("member")
        n = 1
        for member in members:
            member_name = member.getAttribute("name")
            value = member.getAttribute("value")
            enum_name = make_enum_name(member_name)
            if n < len(members):
                fo.write("        %s = %s,\n" % (enum_name, value))
            else:
                fo.write("        %s = %s\n" % (enum_name, value))
            n += 1
        fo.write("    }\n")
        fo.write(footer)
        fo.close()

doc = xml.dom.minidom.parse(sys.argv[1])
generate_bitfields(doc)
